function [ packet] = TPMS_receiver2( TPMS_signal )
%TPMS_receiver
% This function takes in the received signal from a TPMS and will
% demodulate and decoded the packet
%close all
%clc
% Sample rate used on USRP
Fs = 2.4e6;
%These are the thresholds used to determine if a signal is present
power_threshold = 2*bandpower(TPMS_signal(1,:));
threshold = 20*power_threshold;
%% Reformatting Signal
rx = TPMS_concat(TPMS_signal);
%% Traverse the entire received signal looking for TPMS signal
lower_ind = 1;
%lower_ind:lower_ind+10
a = length(rx);
b = size(bandpower(rx(lower_ind:lower_ind+10)));
c = bandpower(rx(lower_ind:lower_ind+10));
dataRx = rx(lower_ind:lower_ind+10);
% while (bandpower(rx(lower_ind:lower_ind+10)) < threshold) && (lower_ind < length(rx))
  while bandpower(rx(lower_ind:lower_ind+10)) < threshold && lower_ind < 2*rows - 10
lower_ind = lower_ind + 1;
if lower_ind >= 2048
disp('No signal found');
break;
end
end
%locating the end point
upper_ind = length(rx);
while bandpower(rx(upper_ind-10:upper_ind)) < threshold && upper_ind > 1
upper_ind = upper_ind - 1;
if upper_ind <= 10
disp('No signal found');
break;
end
end
%holds the wave form of just the packet (no noise)
packet_waveform = rx(lower_ind:upper_ind);
%demodulate the packet
figure
plot(1:length(packet_waveform),packet_waveform)
packet = demodulator( packet_waveform, Fs );
%decode the packet
%decode_packet(packet);
%figure(2)
%plot(1:length(packet_waveform), real(packet_waveform));
end
